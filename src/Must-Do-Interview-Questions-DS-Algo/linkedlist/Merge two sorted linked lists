/*Given two linked lists of size N which is sorted in ascending order. Merge them in-place and return head of the merged list.

Note: It is strongly recommended to do merging in-place using O(1) extra space.

Input:
First line of input contains number of testcases T. For each testcase, first line of input contains N and M, and next two line contains sorted lists of size N and M.

Output:
For each testcase, print the merged list in sorted form.*/


/* Link list Node  
struct Node {
    int data;
    Node* next;
}; */
Node* SortedMerge(Node* head1,   Node* head2)
{
    struct Node* result = NULL; 

  if (head1 == NULL)  
     return(head2); 
  else if (head2==NULL)  
     return(head1);
  if (head1->data <= head2->data)  
  { 
     result = head1; 
     result->next = SortedMerge(head1->next,head2); 
  } 
  else 
  { 
     result =head2; 
     result->next = SortedMerge(head1, head2->next); 
  } 
  return(result); 
    
}
