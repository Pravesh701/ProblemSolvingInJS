//Given a Binary Tree your task is to print the nodes which dont have a sibling node .You are required to complete the function printSibling. 

/* Tree node structure  used in the program
 struct Node
 {
     int data;
     Node* left, *right;
}; */
/* Prints the nodes having no siblings.  */
void printSibling(Node* node)
{
    queue<Node *> q;
    q.push(node);
    vector<int>v;
    while(q.empty()==false)
    {
        Node *temp=q.front();
        if(temp->left==NULL && temp->right!=NULL)
            v.push_back(temp->right->data);
        else if(temp->left!=NULL && temp->right==NULL)
            v.push_back(temp->left->data);
        if(temp->left!=NULL)
            q.push(temp->left);
        if(temp->right!=NULL)
            q.push(temp->right);
        q.pop();
    }
    if(v.size()==0)
        cout<<"-1";
    else
    {
        sort(v.begin(),v.end());
        for(int i=0;i<v.size();i++)
            cout<<v[i]<<" ";
    }
}
